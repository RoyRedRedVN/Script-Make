--// Ti·ªán √çch 67 - Full Motion Fix 2025 + Meme Text
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")

local player = Players.LocalPlayer
local char = player.Character or player.CharacterAdded:Wait()
local hum = char:WaitForChild("Humanoid")
local hrp = char:WaitForChild("HumanoidRootPart")

-- ================= VARIABLES =================
local recording, replaying, loopReplay, npcWalking = false, false, false, false
local recordData, animTracksCache = {}, {}
local activeTween = nil
local replaySpeed = 1
local AFK_TIME, AFK_WAIT = 30, 10
local lastPosition = hrp.Position
local afkStart = nil
local afkEnabled = true

-- ================= FUN MEME LABEL =================
local function createMemeLabel(text,color)
    local gui = Instance.new("BillboardGui")
    gui.Size = UDim2.new(0,150,0,50)
    gui.AlwaysOnTop = true
    gui.Adornee = hrp
    gui.Name = "MemeLabel_"..text

    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1,0,1,0)
    label.BackgroundTransparency = 1
    label.Text = text
    label.TextColor3 = color
    label.TextScaled = true
    label.Font = Enum.Font.GothamBold
    label.Parent = gui

    gui.Parent = hrp
    return gui
end

local meme1 = createMemeLabel("üöÄ GO GO GO!", Color3.fromRGB(255,0,0))
local meme2 = createMemeLabel("LOL XD", Color3.fromRGB(0,255,0))
local meme3 = createMemeLabel("AFK???", Color3.fromRGB(255,255,0))

-- ================= RECORD/REPLAY =================
local function startRecording()
    if recording then return end
    recording = true
    table.clear(recordData)
    local startTime = tick()
    task.spawn(function()
        while recording do
            task.wait(0.05)
            local step = {time=tick()-startTime, cframe=hrp.CFrame, animTracks={}}
            for _,track in ipairs(hum:GetPlayingAnimationTracks()) do
                table.insert(step.animTracks,{
                    animationId=track.Animation.AnimationId,
                    timePosition=track.TimePosition,
                    speed=track.Speed,
                    weight=track.Weight
                })
            end
            table.insert(recordData, step)
            if #recordData>2000 then table.remove(recordData,1) end
        end
    end)
end

local function stopRecording() recording=false end

local function startReplay()
    if #recordData==0 or replaying then return end
    replaying=true
    for _,track in pairs(animTracksCache) do if track.IsPlaying then track:Stop() end end

    task.spawn(function()
        repeat
            for i,step in ipairs(recordData) do
                if not replaying then break end
                local nextStep=recordData[i+1]
                local waitTime=nextStep and (nextStep.time-step.time)/replaySpeed or 0.05
                local tween=TweenService:Create(hrp, TweenInfo.new(waitTime,Enum.EasingStyle.Linear),{CFrame=step.cframe})
                tween:Play()
                tween.Completed:Wait()
                for _,anim in ipairs(step.animTracks) do
                    local track=animTracksCache[anim.animationId]
                    if not track then
                        local a=Instance.new("Animation")
                        a.AnimationId=anim.animationId
                        track=hum:LoadAnimation(a)
                        animTracksCache[anim.animationId]=track
                    end
                    track.TimePosition=anim.timePosition
                    track.Speed=anim.speed*replaySpeed
                    track:AdjustWeight(anim.weight)
                    if not track.IsPlaying then track:Play() end
                end
            end
        until not loopReplay or not replaying
        replaying=false
    end)
end

local function stopReplay() replaying=false end

-- ================= NPC WALK =================
local function startNPCWalk()
    if npcWalking then return end
    npcWalking=true
    task.spawn(function()
        while npcWalking do
            local offset=Vector3.new(math.random(-30,30),0,math.random(-30,30))
            local target=hrp.Position+offset
            local tween=TweenService:Create(hrp,TweenInfo.new((hrp.Position-target).Magnitude/10,Enum.EasingStyle.Linear),{CFrame=CFrame.lookAt(hrp.Position,target)})
            tween:Play()
            activeTween=tween
            tween.Completed:Wait()
            task.wait(math.random(2,5))
        end
    end)
end

local function stopNPCWalk()
    npcWalking=false
    if activeTween then activeTween:Cancel(); activeTween=nil end
end

-- ================= AFK =================
task.spawn(function()
    while task.wait(1) do
        if not afkEnabled then afkStart=nil continue end
        local dist=(hrp.Position-lastPosition).Magnitude
        if dist<3 then
            if not afkStart then afkStart=tick() end
            if tick()-afkStart>=AFK_TIME then
                meme3.Text="AFK AFK AFK!!!"
                startNPCWalk()
            end
        else
            afkStart=nil
            meme3.Text="AFK???"
        end
        lastPosition=hrp.Position
    end
end)

-- ================= RESPAWN =================
player.CharacterAdded:Connect(function(newChar)
    char=newChar
    hum=newChar:WaitForChild("Humanoid")
    hrp=newChar:WaitForChild("HumanoidRootPart")
    recording,replaying,npcWalking=false,false,false
    lastPosition=hrp.Position
    afkStart=nil
    meme1.Parent=hrp
    meme2.Parent=hrp
    meme3.Parent=hrp
end)

print("[Ti·ªán √çch 67] Full Motion + Meme Text loaded ‚úÖ")